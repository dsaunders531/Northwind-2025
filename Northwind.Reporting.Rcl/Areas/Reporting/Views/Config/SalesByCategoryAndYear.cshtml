@using Northwind.Context.Contexts;
@using Northwind.Context.Interfaces;
@using Northwind.Context.Models.Reporting;
@using Northwind.Reporting.Rcl.Data;
@using Northwind.Reporting.Rcl.Reports;
@using Northwind.Reporting.Enums;
@using Northwind.Reporting.Models;

@model ReportConfig<SalesByCategoryAndYearReportParameters>

@{
    Layout = "_ReportConfigLayout";

    ViewData["Title"] = "Sales By Category and Year";
}

@inject INorthwindProductsService service

@functions {
    private async Task<IEnumerable<SelectListItem>> CategoriesList(string selected)
    {
        return (await service.GetCategories(1, Patterns.SortBy.Ascending)).Page
            .Select(s => new SelectListItem()
            {
                Value = s.CategoryId.ToString(),
                Text = s.CategoryName,
                Selected = s.CategoryName == selected
            });
    }

    private IEnumerable<SelectListItem> Years(int selected)
    {
        List<SelectListItem> result = new List<SelectListItem>();

        DateTime now = DateTime.UtcNow;

        for (int i = now.Year; i >= (now.Year - 9); i--)
        {
            result.Add(new SelectListItem() { 
                Value = i.ToString(), 
                Text = i.ToString(), 
                Selected = selected == i 
            });
        }

        return result;
    }
}

<h2>Sales By Category And Year</h2>

@*
    This report is designed to run immediately only
    <partial name="_ReportParametersBase" model="Model.Parameters" />    
*@
<input type="hidden" id="startDate" asp-for="Parameters.StartDate" />
<input type="hidden" id="endDate" asp-for="Parameters.EndDate" />
<input type="hidden" id="reportPeriod" asp-for="Parameters.ReportPeriod" />

<div class="form-group">
    <label asp-for="Parameters.Category" class="form-label"></label>
    <select class="form-select"
            asp-for="Parameters.Category"
            asp-items="@(await this.CategoriesList(Model.Parameters.Category))">
    </select>
    <span asp-validation-for="Parameters.Category" class="error"></span>
</div>

<div class="form-group">
    <label asp-for="Parameters.Year" class="form-label"></label>
    <select class="form-select"
            asp-for="Parameters.Year"
            asp-items="@this.Years(Model.Parameters.Year)">
    </select>
    <span asp-validation-for="Parameters.Year" class="error"></span>
</div>

@section PageScripts {
    @*This report is designed to be run immediataly only*@
    <script type="text/javascript">
        // selecting a value fires an event.
        // disable the control after it has been processed.
        var freqEle = document.getElementById('frequency');
        freqEle.disabled = true;
        if (!freqEle.classList.contains('disabled')) {
            freqEle.classList.add('disabled');
        }
        
        document.onreadystatechange = (ev) => {
            if (document.readyState == 'complete')
            {   
                // this event needs to fire last after all the others
                setTimeout(() => {                    
                    document.getElementById('frequency').value = '@ReportFrequency.Immediate';                    
                }, 0);
            }
        };
    </script>
}