// <auto-generated />

using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Northwind.Context.MsSql.Migrations
{
    public partial class RemoveHardCodedDates : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {            
            // Add the stored procs to remove hard-coded dates

            migrationBuilder.Sql("CREATE PROCEDURE [ProductSalesForYear] " +
                "@start DateTime, " +
                "@end DateTime " +
                "AS " +
                "BEGIN " +
                "SELECT Categories.CategoryName, Products.ProductName, " +
                "Sum(CONVERT(money,(\"Order Details\".UnitPrice*Quantity*(1-Discount)/100))*100) AS ProductSales " +
                "FROM (Categories INNER JOIN Products ON Categories.CategoryID = Products.CategoryID) " +
                "INNER JOIN (Orders INNER JOIN \"Order Details\" ON Orders.OrderID = \"Order Details\".OrderID) ON Products.ProductID = \"Order Details\".ProductID " +
                "WHERE (((Orders.ShippedDate) Between @start And @end)) " +
                "GROUP BY Categories.CategoryName, Products.ProductName; " +
                "END");

            migrationBuilder.Sql("CREATE PROCEDURE [CategorySalesForYear] " +
                                    "@start DateTime, " +
                                    "@end DateTime " +
                                    "AS " +
                                    "BEGIN " +
                                    "SELECT Categories.CategoryName, " +
                                    "Sum(CONVERT(money,(\"Order Details\".UnitPrice*Quantity*(1-Discount)/100))*100) AS CategorySales " +
                                    "FROM (Categories INNER JOIN Products ON Categories.CategoryID = Products.CategoryID) " +
                                    "INNER JOIN (Orders INNER JOIN \"Order Details\" ON Orders.OrderID = \"Order Details\".OrderID) " +
                                    "ON Products.ProductID = \"Order Details\".ProductID " +
                                    "WHERE (((Orders.ShippedDate) Between @start And @end))" +
                                    " GROUP BY Categories.CategoryName; " +
                                    "END");
            
            migrationBuilder.Sql("CREATE PROCEDURE [SalesByCategoryReport] " +
                                    "@start DateTime, " +
                                    "@end DateTime " +
                                    "AS BEGIN " +
                                    "SELECT Categories.CategoryID, Categories.CategoryName, Products.ProductName, " +
                                    "Sum(\"Order Details Extended\".ExtendedPrice) AS ProductSales " +
                                    "FROM Categories INNER JOIN " +
                                    "(Products INNER JOIN (Orders INNER JOIN \"Order Details Extended\" ON Orders.OrderID = \"Order Details Extended\".OrderID) " +
                                    "ON Products.ProductID = \"Order Details Extended\".ProductID) ON Categories.CategoryID = Products.CategoryID " +
                                    "WHERE Orders.OrderDate BETWEEN @start And @end " +
                                    "GROUP BY Categories.CategoryID, Categories.CategoryName, Products.ProductName " +
                                    "END");

            migrationBuilder.Sql("CREATE PROCEDURE [SalesByTotalsByAmount] " +
                                    "@start DateTime, " +
                                    "@end DateTime " +
                                    "AS BEGIN " +
                                    "SELECT \"Order Subtotals\".Subtotal AS SaleAmount, Orders.OrderID, Customers.CompanyName, " +
                                    "Orders.ShippedDate " +
                                    "FROM Customers INNER JOIN " +
                                    "(Orders INNER JOIN \"Order Subtotals\" ON Orders.OrderID = \"Order Subtotals\".OrderID) " +
                                    "ON Customers.CustomerID = Orders.CustomerID " +
                                    "WHERE (\"Order Subtotals\".Subtotal >2500) AND (Orders.ShippedDate BETWEEN @start And @end) " +
                                    "END");

            migrationBuilder.Sql("CREATE PROCEDURE [SummaryOfSalesByQuarter] " +
                                    "@start DateTime, " +
                                    "@end DateTime " +
                                    "AS BEGIN " +
                                    "select * from [Summary of Sales by Quarter] " +
                                    "WHERE ShippedDate Between @start and @end; " +
                                    "END");

            migrationBuilder.Sql("CREATE PROCEDURE [SummarySalesTotalByYear] " +
                                        "@start DateTime, " +
                                        "@end DateTime " +
                                        "AS BEGIN " +
                                        "SELECT Orders.ShippedDate, Orders.OrderID, " +
                                        "Sum(CONVERT(money,([Order Details].UnitPrice*Quantity*(1-Discount)/100))*100) AS Subtotal " +
                                        "FROM Orders INNER JOIN [Order Details] ON Orders.OrderID = [Order Details].OrderID " +
                                        "WHERE Orders.ShippedDate IS NOT NULL " +
                                        "AND Orders.ShippedDate BETWEEN @start AND @end " +
                                        "GROUP BY Orders.ShippedDate, Orders.OrderID; " +
                                        "END");

            migrationBuilder.Sql("CREATE PROCEDURE [QuarterlyOrders] " +
                                    "@start DateTime, " +
                                    "@end DateTime " +
                                    "AS BEGIN " +
                                    "SELECT DISTINCT Customers.CustomerID, Customers.CompanyName, Customers.City, Customers.Country " +
                                    "FROM Customers RIGHT JOIN Orders ON Customers.CustomerID = Orders.CustomerID " +
                                    "WHERE Orders.OrderDate BETWEEN @start And @end; " +
                                    "END");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            // remove stored procs we just created...
            migrationBuilder.Sql("DROP PROCEDURE QuarterlyOrders;");
            migrationBuilder.Sql("DROP PROCEDURE SummarySalesTotalByYear;");
            migrationBuilder.Sql("DROP PROCEDURE SummaryOfSalesByQuarter;");
            migrationBuilder.Sql("DROP PROCEDURE SalesByTotalsByAmount;");
            migrationBuilder.Sql("DROP PROCEDURE SalesByCategoryReport;");
            migrationBuilder.Sql("DROP PROCEDURE CategorySalesForYear;");
            migrationBuilder.Sql("DROP PROCEDURE ProductSalesForYear;");
        }
    }
}
